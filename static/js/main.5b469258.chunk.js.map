{"version":3,"sources":["Component/card/card.component.jsx","Component/card-list/card-list.component.jsx","Component/Search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","robo","id","alt","name","email","CardList","robos","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobos","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAGaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,0BACHC,IAAI,SAEN,mCAAML,EAAMG,KAAKG,QACjB,4BAAIN,EAAMG,KAAKI,YCNNC,EAAW,SAACR,GACvB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,MAAMC,KAAI,SAACP,GAAD,OACf,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,UCLXO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACvC,OACE,uBACEZ,UAAU,SACVa,KAAK,OACLF,YAAaA,EACbG,SAAUF,MCsCDG,E,kDAxCb,aAAe,IAAD,8BACZ,gBAmBFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAnBtC,EAAKC,MAAQ,CACXb,MAAO,GACPU,YAAa,IAJH,E,qDAUd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,MAAOkB,S,oBAW1C,WACE,MAA+BC,KAAKN,MAA5Bb,EAAR,EAAQA,MAAOU,EAAf,EAAeA,YACTU,EAAgBpB,EAAMqB,QAAO,SAAA3B,GAAI,OAAIA,EAAKG,KAAKyB,cAAcC,SAASb,EAAYY,kBAExF,OACE,sBAAK9B,UAAU,MAAf,UACE,8CACA,cAAC,EAAD,CAAWW,YAAY,wBAAwBC,aAAce,KAAKf,eAClE,cAAC,EAAD,CAAUJ,MAAOoB,W,GAjCPI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5b469258.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      src={`https://robohash.org/${props.robo.id}?set=set8&size=180x180`}\r\n      alt=\"robo\"\r\n    />\r\n    <h2> {props.robo.name}</h2>\r\n    <p>{props.robo.email}</p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component\";\r\n\r\nexport const CardList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.robos.map((robo) => (\r\n        <Card key={robo.id} robo={robo} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"text\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n","\nimport './App.css';\nimport { Component } from 'react';\nimport { CardList } from './Component/card-list/card-list.component';\nimport { SearchBox } from './Component/Search-box/search-box.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robos: [],\n      searchField: ''\n    };\n\n    // this.handleChange=this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ robos: users }));\n  }\n\n  // handleChange(e){\n  //   this.setState({ searchField: e.target.value })\n  // }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { robos, searchField } = this.state;\n    const filteredRobos = robos.filter(robo => robo.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1>Robo Rolodox</h1>\n        <SearchBox placeholder=\"Search for Robot Here\" handleChange={this.handleChange} />\n        <CardList robos={filteredRobos} />\n      </div>\n    )\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}